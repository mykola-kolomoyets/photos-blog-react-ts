{"version":3,"file":"static/js/172.80fd9390.chunk.js","mappings":"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","sources":["utils/hooks/useDebounce.ts","components/ui/input/input.constants.ts","components/ui/input/index.tsx","components/layout/grid/grid.constants.ts","components/layout/grid/index.tsx","components/ui/photo-item/index.tsx","webpack://photos-gallery/./src/components/layout/photos-list/photos-list.module.scss?c78c","components/layout/photos-list/index.tsx","views/photos-list/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst useDebounce = <T>(value: T, delay?: number): T => {\r\n\tconst [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst timer = setTimeout(() => setDebouncedValue(value), delay || 500)\r\n\t\t\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(timer)\r\n\t\t}\r\n\t}, [value, delay])\r\n\t\r\n\treturn debouncedValue\r\n}\r\n\r\nexport default useDebounce","import {TextFieldProps} from '@mui/material/TextField/TextField';\r\n\r\nexport const defaultInputProps = {\r\n\tvariant: 'standard' as TextFieldProps['variant'],\r\n\tlabel: 'Search by title',\r\n\tinputProps: {\r\n\t\t'data-testid': 'input'\r\n\t}\r\n}","import {ChangeEvent, FC, useEffect, useMemo, useState, useTransition} from 'react';\r\nimport {useMediaQuery, TextField, InputAdornment} from '@mui/material';\r\nimport {TextFieldProps} from '@mui/material/TextField/TextField';\r\nimport {Search} from '@mui/icons-material';\r\n\r\nimport usePhotosStore from '../../../store/usePhotosStore';\r\n\r\nimport useDebounce from '../../../utils/hooks/useDebounce';\r\nimport {limitStep} from '../../layout/photos-list/photos-list.constants';\r\n\r\nimport {defaultInputProps} from './input.constants';\r\n\r\nconst Input: FC = () => {\r\n\tconst {setLimit, setSearchValue} = usePhotosStore();\r\n\t\r\n\tconst [_, startTransition] = useTransition();\r\n\t\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\t\r\n\tconst searchValue = useDebounce(inputValue);\r\n\t\r\n\tconst isTextFieldFullWidth = useMediaQuery('(max-width:900px)');\r\n\t\r\n\tconst onSearchValueChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst {value} = event.target;\r\n\t\t\r\n\t\tstartTransition(() => {\r\n\t\t\tsetInputValue(value);\r\n\t\t});\r\n\t}\r\n\t\r\n\tconst textInputProps = useMemo<TextFieldProps>(() => ({\r\n\t\t...defaultInputProps,\r\n\t\tfullWidth: isTextFieldFullWidth,\r\n\t\tsize: isTextFieldFullWidth ? 'medium' : 'small',\r\n\t\tvalue: inputValue,\r\n\t\tonChange: onSearchValueChange\r\n\t}),  [isTextFieldFullWidth, inputValue]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetSearchValue(searchValue);\r\n\t}, [searchValue]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetLimit(limitStep);\r\n\t}, [searchValue]);\r\n\t\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...textInputProps}\r\n\t\t\tInputProps={{\r\n\t\t\t\tstartAdornment: (\r\n\t\t\t\t\t<InputAdornment position=\"start\">\r\n\t\t\t\t\t\t<Search/>\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t)\r\n\t\t\t}}\r\n\t\t/>\r\n\t)\r\n};\r\n\r\nexport default Input;","export const gridContainerLayout = {\r\n\tspacing: {xs: 2, md: 3},\r\n\tcolumns: {xs: 1, sm: 2, md: 3},\r\n\talignItems: 'stretch'\r\n}\r\n\r\nexport const gridItemLayout = {\r\n\tmd: 1,\r\n\tsm: 1,\r\n\txs: 1\r\n};\r\n\r\nexport const loadingBoxSX = {display: 'flex', justifyContent: 'center', padding: '16px'};","import {Fragment} from 'react';\r\nimport {Box, CircularProgress, Grid} from '@mui/material';\r\n\r\nimport {\r\n\tloadingBoxSX,\r\n\tgridContainerLayout,\r\n\tgridItemLayout\r\n} from './grid.constants';\r\n\r\ntype GridProps<P> = {\r\n\titems: P[];\r\n\trenderItem: (item: P) => JSX.Element;\r\n\tkeyExtractor: (item: P) => string;\r\n\tisFetching: boolean;\r\n}\r\nconst GridComponent = <P, >({items, renderItem, keyExtractor, isFetching}: GridProps<P>) => (\r\n\t<Fragment>\r\n\t\t<Grid container {...gridContainerLayout}>\r\n\t\t\t{items.map((item) => (\r\n\t\t\t\t<Grid item key={keyExtractor(item)} {...gridItemLayout}>\r\n\t\t\t\t\t{renderItem(item)}\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\t\t</Grid>\r\n\t\t\r\n\t\t{isFetching && (\r\n\t\t\t<Box sx={loadingBoxSX}>\r\n\t\t\t\t<CircularProgress/>\r\n\t\t\t</Box>\r\n\t\t)}\r\n\t</Fragment>\r\n);\r\nexport default GridComponent;","import {FC, useState} from 'react';\r\nimport {Paper, Typography, Card, CardMedia, CardContent} from '@mui/material';\r\n\r\nimport {Photo} from '../../../utils/types/photos';\r\nimport {sliceString} from '../../../utils/functions';\r\n\r\n/**\r\n * ! Images URLs from jsonPlaceholder don`t load\r\n * ! correctly, so I added mock image to display it.\r\n */\r\nimport {mockImg} from './photo-item.constants';\r\n\r\ntype PhotoItemProps = {\r\n\tdata: Photo;\r\n\tonClick: () => void;\r\n}\r\nconst PhotoItem: FC<PhotoItemProps> = ({data, onClick}) => {\r\n\tconst [elevation, setElevation] = useState(3);\r\n\t\r\n\tconst onMouseOver = () => setElevation(6);\r\n\tconst onMouseOut = () => setElevation(3);\r\n\t\r\n\t\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tsx={{height: '100%', cursor: 'pointer'}}\r\n\t\t\televation={elevation}\r\n\t\t\tonClick={onClick}\r\n\t\t\tonMouseOver={onMouseOver}\r\n\t\t\tonMouseOut={onMouseOut}\r\n\t\t>\r\n\t\t\t<Card data-testid=\"photo-item\" sx={{\r\n\t\t\t\tboxShadow: 'none'\r\n\t\t\t}}>\r\n\t\t\t\t<CardMedia\r\n\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t// image={data.url}\r\n\t\t\t\t\t// src={data.url}\r\n\t\t\t\t\timage={mockImg}\r\n\t\t\t\t\tsrc={mockImg}\r\n\t\t\t\t\theight={200}\r\n\t\t\t\t\talt={sliceString(data.title, 10)}\r\n\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"body2\">\r\n\t\t\t\t\t\t{data.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nexport default PhotoItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"photos-list_list__Kif2H\"};","import {FC, useMemo, memo} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Typography} from '@mui/material';\r\n\r\nimport usePhotosStore from '../../../store/usePhotosStore';\r\n\r\nimport Grid from '../grid';\r\n\r\nimport Button from '../../ui/button';\r\nimport PhotoItem from '../../ui/photo-item';\r\n\r\nimport {limitStep} from './photos-list.constants';\r\n\r\nimport styles from './photos-list.module.scss';\r\n\r\nconst PhotosList: FC = () => {\r\n\tconst {\r\n\t\tisFetching,\r\n\t\tphotos,\r\n\t\tlimit,\r\n\t\ttotal,\r\n\t\tsearchValue,\r\n\t\tfilteredLength,\r\n\t\tsetLimit\r\n\t} = usePhotosStore();\r\n\t\r\n\tconst navigate = useNavigate();\r\n\t\r\n\tconst isPluralPhotos = useMemo(() => photos.length > 1, [photos]);\r\n\t\r\n\tconst onShowMoreClick = () => setLimit(limit + limitStep);\r\n\t\r\n\tconst onPhotoCLick = (id: string) => navigate(`/${id}`);\r\n\t\r\n\tif (!photos.length) {\r\n\t\treturn (\r\n\t\t\t<section data-testid=\"empty-photos\" className={styles.list}>\r\n\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\tPhotos by title{' '}\r\n\t\t\t\t\t\r\n\t\t\t\t\t<strong>{searchValue}</strong>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{' '}were not found...\r\n\t\t\t\t</Typography>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<section className={styles.list}>\r\n\t\t\t{searchValue && !!searchValue.trim() && (\r\n\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\tFound {filteredLength} photo{isPluralPhotos ? 's' : ''} from {total}\r\n\t\t\t\t</Typography>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t<Grid\r\n\t\t\t\titems={photos}\r\n\t\t\t\trenderItem={(photo) => <PhotoItem data={photo} onClick={() => onPhotoCLick(photo.id)}/>}\r\n\t\t\t\tkeyExtractor={(photo) => photo.id}\r\n\t\t\t\tisFetching={isFetching}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\t{photos.length >= limit ? (\r\n\t\t\t\t<Button title=\"Show More\" onClick={onShowMoreClick}/>\r\n\t\t\t) : null}\r\n\t\t</section>\r\n\t)\r\n};\r\n\r\nexport default memo(PhotosList);","import React, {FC, Fragment, useEffect} from 'react';\r\nimport {Typography} from '@mui/material';\r\n\r\nimport usePhotosStore from '../../store/usePhotosStore';\r\n\r\nimport Input from '../../components/ui/input';\r\nimport PhotosList from '../../components/layout/photos-list';\r\n\r\nconst PhotosListView: FC = () => {\r\n\tconst {getPhotos, limit, searchValue, searchPhotos, setLimit} = usePhotosStore();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsearchValue ? searchPhotos() : getPhotos();\r\n\t}, [limit, searchValue]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetLimit(6);\r\n\t}, []);\r\n\t\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Typography align=\"center\" variant=\"h5\" sx={{marginBottom: '8px'}}>\r\n\t\t\t\tPhotos\r\n\t\t\t</Typography>\r\n\t\t\t\r\n\t\t\t<Input/>\r\n\t\t\t\r\n\t\t\t<section>\r\n\t\t\t\t<PhotosList/>\r\n\t\t\t</section>\r\n\t\t</Fragment>\r\n\t)\r\n};\r\n\r\nexport default PhotosListView;"],"names":["value","delay","useState","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","defaultInputProps","variant","label","inputProps","usePhotosStore","setLimit","setSearchValue","useTransition","startTransition","inputValue","setInputValue","searchValue","useDebounce","isTextFieldFullWidth","useMediaQuery","onSearchValueChange","event","target","textInputProps","useMemo","fullWidth","size","onChange","limitStep","TextField","InputProps","startAdornment","InputAdornment","position","Search","gridContainerLayout","spacing","xs","md","columns","sm","alignItems","gridItemLayout","loadingBoxSX","display","justifyContent","padding","items","renderItem","keyExtractor","isFetching","Fragment","Grid","container","map","item","Box","sx","CircularProgress","data","onClick","elevation","setElevation","Paper","height","cursor","onMouseOver","onMouseOut","Card","boxShadow","CardMedia","component","image","mockImg","src","alt","sliceString","title","CardContent","Typography","PhotosList","photos","limit","total","filteredLength","navigate","useNavigate","isPluralPhotos","length","className","styles","trim","photo","id","memo","getPhotos","searchPhotos","align","marginBottom"],"sourceRoot":""}